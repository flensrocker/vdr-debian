#! /bin/sh /usr/share/dpatch/dpatch-run
##
## DP: This allows to add a RECSTART macro to a timer, which will be replaced
## DP: when recording starts with the current time (not the timer start time!).
## DP:
## DP: This way after each interrupted recording a new *.rec will be created
## DP: This is required by the ARD MAM-system to be able to cut time-based slices
## DP: from a loop recording.

@DPATCH@
Index: vdr1.7+/recording.c
===================================================================
--- vdr1.7+.orig/recording.c	2012-05-29 16:07:16.000000000 +0200
+++ vdr1.7+/recording.c	2012-05-29 16:07:19.000000000 +0200
@@ -635,10 +635,16 @@
      }
   const char *macroTITLE   = strstr(Timer->File(), TIMERMACRO_TITLE);
   const char *macroEPISODE = strstr(Timer->File(), TIMERMACRO_EPISODE);
-  if (macroTITLE || macroEPISODE) {
+  const char *macroRECSTART = strstr(Timer->File(), TIMERMACRO_RECSTART);
+  if (macroTITLE || macroEPISODE || macroRECSTART) {
      name = strdup(Timer->File());
      name = strreplace(name, TIMERMACRO_TITLE, Title);
-     name = strreplace(name, TIMERMACRO_EPISODE, Subtitle);
+     struct tm tm_r;
+     time_t now = time(NULL);
+     localtime_r(&now, &tm_r);
+     char buffer[15];
+     strftime(buffer, sizeof(buffer), "%Y%m%d%H%M%S", &tm_r);
+     name = strreplace(name, TIMERMACRO_RECSTART, buffer);
      // avoid blanks at the end:
      int l = strlen(name);
      while (l-- > 2) {
Index: vdr1.7+/recording.h
===================================================================
--- vdr1.7+.orig/recording.h	2012-05-29 16:07:16.000000000 +0200
+++ vdr1.7+/recording.h	2012-05-29 16:07:19.000000000 +0200
@@ -21,6 +21,7 @@
 #define FOLDERDELIMCHAR '~'
 #define TIMERMACRO_TITLE    "TITLE"
 #define TIMERMACRO_EPISODE  "EPISODE"
+#define TIMERMACRO_RECSTART  "RECSTART"
 
 //#define __RECORDING_H_DEPRECATED_DIRECT_MEMBER_ACCESS // Code enclosed with this macro is deprecated and may be removed in a future version
 
